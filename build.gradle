plugins {
    id 'net.kyori.indra.licenser.spotless' version '2.2.0'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'dev.vankka'
version '4.4.0-SNAPSHOT'

repositories {
    mavenCentral()

    if (version.endsWith('-SNAPSHOT')) { // Permit snapshots only when the version is a snapshot
        maven {
            url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}

test {
    useJUnitPlatform()
}

indraSpotlessLicenser {
    licenseHeaderFile(rootProject.file('buildscript/LICENSE_HEADER'))
    newLine(true)
    property('inception', '2021')
    property('year_now', String.valueOf(Calendar.getInstance().get(Calendar.YEAR)))
}

dependencies {
    api group: 'net.kyori', name: 'adventure-api', version: '4.14.0'
    api group: 'dev.vankka', name: 'SimpleAST', version: '2.2.8'
    compileOnlyApi 'org.jetbrains:annotations:23.0.0'

    // Test
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.2')
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            pom {
                name = project.name
                packaging = 'jar'
                description = 'A library for transcoding between Minecraft and Discord. '
                url = 'https://github.com/Vankka/MCDiscordReserializer'

                scm {
                    connection = 'scm:git:https://github.com/Vankka/MCDiscordReserializer.git'
                    developerConnection = 'scm:git:https://github.com/Vankka/MCDiscordReserializer.git'
                    url = 'https://github.com/Vankka/MCDiscordReserializer'
                }

                licenses {
                    license {
                        name = 'GNU General Public License, Version 3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'Vankka'
                    }
                }
            }
        }
    }
}

if (System.getenv('SIGNING_KEY') != null || project.hasProperty("signing.keyId")) {
    signing {
        sign publishing.publications.maven

        def key = System.getenv('SIGNING_KEY')
        if (key != null) {
            useInMemoryPgpKeys(key, System.getenv('SIGNING_KEY_PASS'))
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri('https://s01.oss.sonatype.org/service/local/'))
            snapshotRepositoryUrl.set(uri('https://s01.oss.sonatype.org/content/repositories/snapshots/'))
            packageGroup = rootProject.group
        }
    }
}

